{#
/**
 * @file
 * Default theme implementation for status messages.
 *
 * Displays status, error, and warning messages, grouped by type.
 *
 * An invisible heading identifies the messages for assistive technology.
 * Sighted users see a colored box. See http://www.w3.org/TR/WCAG-TECHS/H69.html
 * for info.
 *
 * Add an ARIA label to the contentinfo area so that assistive technology
 * user agents will better describe this landmark.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - status_headings: List of all status types.
 * - display: (optional) May have a value of 'status' or 'error' when only
 *   displaying messages of that specific type.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 */
#}
{{ attach_library('astarter/messages') }}
{% block messages %}
{%
  set status_heading = {
    'status': 'Status message'|t,
    'error': 'Error message'|t,
    'warning': 'Warning message'|t,
    'info': 'Informative message'|t,
  }
%}
{%
  set status_classes = {
    'status': 'status',
    'error': 'error',
    'warning': 'warning',
    'info': 'info',
  }
%}
{% for type, messages in message_list %}
{%
  set classes = [
    'messages',
    'messages--icon',
    'messages--' ~ status_classes[type],
  ]
%}
<div role="contentinfo" aria-label="{{ status_headings[type] }}"{{ attributes.addClass(classes)|without('role', 'aria-label') }}>
  {% if type == 'error' %}
    <div role="alert">
  {% endif %}
  {% if status_headings[type] %}
    <p class="messages__title a11y">{{ status_headings[type] }}</p>
  {% endif %}
  <div class="messages__content">
    {% if messages|length > 1 %}
      <ul class="messages__list">
        {% for message in messages %}
          <li>{{ message }}</li>
        {% endfor %}
      </ul>
    {% else %}
      <p class="messages__description">{{ messages|first }}</p>
    {% endif %}
  </div>
  {% if type == 'error' %}
    </div>
  {% endif %}
</div>
  {# Remove type specific classes. #}
  {% set attributes = attributes.removeClass(classes) %}
{% endfor %}
{% endblock messages %}
